version: "3"

services:
  front-end:
    container_name: front-end
    build:
      context: ./client/
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./client:/app

  api-gateway:
    container_name: api-gateway
    build:
      context: ./api/api-gateway/
      dockerfile: Dockerfile
    ports:
      - 5000:5000
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./api/api-gateway:/app
    env_file:
      - .env  

  user-service:
    container_name: user-service
    build:
      context: ./api/user-service/
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    depends_on:
      mongodb:
        condition: service_healthy
      mysql:
        condition: service_healthy
    volumes:
      - ./api/user-service:/app
    env_file:
      - .env

  question-service:
    container_name: question-service
    build:
      context: ./api/question-service/
      dockerfile: Dockerfile
    ports:
      - 8100:8100
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./api/question-service:/app
    env_file:
      - .env

  collaboration-service:
    container_name: collboration-service
    build:
      context: ./api/collaboration-service/
      dockerfile: Dockerfile
    ports:
      - 8200:8200
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./api/collaboration-service:/app
    env_file:
      - .env
      
  mysql:
    image: mysql
    restart: always    
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: peerprep
    volumes:
      - user-service-db-data:/var/lib/mysql/
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  mongodb:
    image: mongo
    restart: always
    volumes:
      - question-service-db-data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD-SHELL", "pgrep mongod"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

volumes:
  user-service-db-data:
  question-service-db-data:     